language: cpp
sudo: false
services: docker

matrix:
    include:
        - compiler: clang
          env: BUILD_TYPE=Release DEV_TOOLS=ON
        - compiler: clang
          env: BUILD_TYPE=Debug DEV_TOOLS=ON
        - compiler: g++
          env: BUILD_TYPE=Release DEV_TOOLS=ON
        - compiler: g++
          env: BUILD_TYPE=Debug DEV_TOOLS=ON COVERAGE=--coverage
        - compiler: clang
          env: BUILD_TYPE=Release DEV_TOOLS=OFF
        - compiler: clang
          env: BUILD_TYPE=Debug DEV_TOOLS=OFF

before_install:
- if [[ "$CXX" == "clang++" ]]; then export CXX=clang++-5.0; fi
- travis_retry timeout 120 docker pull vhirtham/gdl
- docker run -itd --name dock -v $(pwd):/home/usr/gdl/code vhirtham/gdl

before_script:

script:
    - docker exec dock cmake -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_DEV_TOOLS=$DEV_TOOLS -DCMAKE_CXX_FLAGS="$COVERAGE" ../code
    - docker exec dock make -j2
    - docker exec dock ctest --output-on-failure
    - if [[ "$COVERAGE" == "--coverage" ]]; then docker exec dock lcov --directory . --capture --output-file ../code/coverage.info; fi
    - if [[ "$COVERAGE" == "--coverage" ]]; then docker exec dock lcov --remove ../code/coverage.info 'usr/*' --output-file ../code/coverage.info; fi
    - if [[ "$COVERAGE" == "--coverage" ]]; then docker exec dock lcov --remove ../code/coverage.info '*/tests/*' --output-file ../code/coverage.info; fi
    - if [[ "$COVERAGE" == "--coverage" ]]; then bash <(curl -s https://codecov.io/bash); fi

after_success:
