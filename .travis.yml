language: cpp
sudo: false
services: docker

before_install:
#- ./scripts/bash/install_cmake.sh
#- sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
#- sudo apt-get -qq update
#- sudo apt-get install -qq -y libboost-test1.55-dev g++-7 libgcc-7-dev
#- sudo apt-get install -y lcov curl libglu1-mesa-dev
#- sudo apt-get install libglew-dev freeglut3-dev
#- sudo apt-get install xvfb
- CI_ENV=`bash <(curl -s https://codecov.io/env)`
- travis_retry timeout 120 docker pull vhirtham/gdl
- echo $(pwd)
- ls
- docker run $CI_ENV -itd --name dock -v $(pwd):/home/usr/gdl/code vhirtham/gdl

before_script:
- docker exec dock ls
- docker exec dock ls ..
- docker exec dock ls ../code
#- sudo apt-get install -qq --force-yes mesa-utils libgl1-mesa-swx11 libgl1-mesa-swx11-dev xvfb
#- /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render
#- export DISPLAY=:99.0
#- sh -e /etc/init.d/xvfb start
#- mkdir build
#- cd build
#- CXX=g++-7 cmake -DCMAKE_CXX_FLAGS="--coverage" ..

script:
    - docker exec dock cmake -DCMAKE_CXX_FLAGS="--coverage" ../code
    - docker exec dock make -j2
    - docker exec dock ctest --output-on-failure
    #- make -j2
    #- make CTEST_OUTPUT_ON_FAILURE=1 test

after_success:
#    - lcov --directory build --capture --output-file coverage.info
#    - lcov --remove coverage.info 'usr/*' --output-file coverage.info
#    - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
